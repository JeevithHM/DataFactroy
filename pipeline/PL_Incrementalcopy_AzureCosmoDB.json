{
	"name": "PL_Incrementalcopy_AzureCosmoDB",
	"properties": {
		"activities": [
			{
				"name": "LKP_OldWaterMarkValue",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "select TableName,WaterMarkValue from dbo.watermarktable where TableName =\n'@{ pipeline().parameters.TableName}'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "DS_Target_Orders",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "LKP_NewWaterMarkValue",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "select MAX(@{pipeline().parameters.WaterMarkColumn}) as NewWaterMarkValue\nfrom @{pipeline().parameters.TableName}",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "DS_Source_Orders",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Copy incrementally",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "LKP_OldWaterMarkValue",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "LKP_NewWaterMarkValue",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "select * from @{pipeline().parameters.TableName}\nwhere @{pipeline().parameters.WaterMarkColumn}>\n'@{activity('LKP_OldWaterMarkValue').output.firstRow.WaterMarkValue}' AND\nInsertDateTime <=\n'@{activity('LKP_NewWaterMarkValue').output.firstRow.NewWaterMarkValue}'\n",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00"
					},
					"sink": {
						"type": "AzureSqlSink"
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "DS_Source_Orders",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "DS_SQL_TargetDB_Paramter",
						"type": "DatasetReference",
						"parameters": {
							"DataSetTableName": {
								"value": "@pipeline().parameters.TableName",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Stored Procedure1",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy incrementally",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Copy data1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[spSetWatermark]",
					"storedProcedureParameters": {
						"NewTime": {
							"value": {
								"value": "@activity('LKP_NewWaterMarkValue').output.firstRow.NewWaterMarkValue",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"TableName": {
							"value": {
								"value": "@activity('LKP_OldWaterMarkValue').output.firstRow.TableName",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL_TargetDB",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Copy data1",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "LKP_OldWaterMarkValue",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "LKP_NewWaterMarkValue",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "select * from @{pipeline().parameters.TableName}\nwhere @{pipeline().parameters.WaterMarkColumn}>\n'@{activity('LKP_OldWaterMarkValue').output.firstRow.WaterMarkValue}' AND\nInsertDateTime <=\n'@{activity('LKP_NewWaterMarkValue').output.firstRow.NewWaterMarkValue}'\n",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00"
					},
					"sink": {
						"type": "CosmosDbMongoDbApiSink",
						"writeBatchTimeout": "00:30:00",
						"writeBehavior": "insert"
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "OrderID",
									"type": "Int32"
								},
								"sink": {
									"path": "$['OrderID']"
								}
							},
							{
								"source": {
									"name": "ProductID",
									"type": "String"
								},
								"sink": {
									"path": "$['ProductID']"
								}
							},
							{
								"source": {
									"name": "CustomerID",
									"type": "String"
								},
								"sink": {
									"path": "$['CustomerID']"
								}
							},
							{
								"source": {
									"name": "UnitPrice",
									"type": "Decimal"
								},
								"sink": {
									"path": "$['UnitPrice']"
								}
							},
							{
								"source": {
									"name": "Quantity",
									"type": "Int32"
								},
								"sink": {
									"path": "$['Quantity']"
								}
							},
							{
								"source": {
									"name": "InsertDateTime",
									"type": "DateTime"
								},
								"sink": {
									"path": "$['InsertDateTime']"
								}
							}
						]
					}
				},
				"inputs": [
					{
						"referenceName": "DS_Source_Orders",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "CosmosDbMongoDbApiCollection1",
						"type": "DatasetReference"
					}
				]
			}
		],
		"parameters": {
			"TableName": {
				"type": "string",
				"defaultValue": "orders"
			},
			"WaterMarkColumn": {
				"type": "string",
				"defaultValue": "InsertDateTime"
			}
		},
		"annotations": []
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}